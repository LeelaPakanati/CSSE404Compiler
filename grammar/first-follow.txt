{
  Program: [ 'class' ],
  MainClassDecl: [ 'class' ],
  ClassDeclList: [ ε, 'class' ],
  ClassDecl: [ 'class' ],
  ClassVarList: [ 'ClassVar', ε ],
  ClassVarDecl: [ 'int', 'boolean', 'ID' ],
  MethodDeclList: [ ε, 'public' ],
  MethodDecl: [ 'public' ],
  FormalList: [ ',', ε ],
  Formal: [ 'int', 'boolean', 'ID' ],
  Type: [ 'int', 'boolean', 'ID' ],
  StmtList: [ ε, 'if', 'while', 'int', 'boolean', 'ID', 'System.out.println' ],
  Stmt: [ 'if', 'while', 'int', 'boolean', 'ID', 'System.out.println' ],
  BracketStmt: [ '{', 'int', 'boolean', 'ID', 'System.out.println' ],
  AtomicStmtList: [ ε, 'int', 'boolean', 'ID', 'System.out.println' ],
  AtomicStmt: [ 'int', 'boolean', 'ID', 'System.out.println' ],
  ExprList: [ ',', ε ],
  Expr: [ 'EqualityOperand' ],
  ExprP: [ '||', '&&', ε ],
  LogicalOperand: [ 'EqualityOperand' ],
  LogicalOperandP: [ '==', '!=', ε ],
  RelOperand: [ 'MulOperand' ],
  RelOperandP: [ '+', '-', ε ],
  AddOperand: [ 'MulOperand' ],
  AddOperandP: [ '*', '/', ε ],
  UnaryOperand: [
    '(',       'new',
    'ID',      'this',
    'Integer', 'null',
    'true',    'false'
  ],
  ParenOperand: [
    'new',   'ID',
    'this',  'Integer',
    'null',  'true',
    'false'
  ],
  Value: [
    'new',   'ID',
    'this',  'Integer',
    'null',  'true',
    'false'
  ]
}
{
  Program: [ '\u0000' ],
  MainClassDecl: [ 'class' ],
  ClassDeclList: [],
  ClassDecl: [ '\u0000', 'class' ],
  ClassVarList: [],
  ClassVarDecl: [],
  MethodDeclList: [ '}' ],
  MethodDecl: [ 'public', '}' ],
  FormalList: [ ']' ],
  Formal: [ ',', ']' ],
  Type: [ 'ID' ],
  StmtList: [ '}', 'return' ],
  Stmt: [
    'if',
    'while',
    'int',
    'boolean',
    'ID',
    'System.out.println',
    '}',
    'return'
  ],
  BracketStmt: [
    'else',
    'if',
    'while',
    'int',
    'boolean',
    'ID',
    'System.out.println',
    '}',
    'return'
  ],
  AtomicStmtList: [ '}' ],
  AtomicStmt: [
    'if',
    'while',
    'int',
    'boolean',
    'ID',
    'System.out.println',
    '}',
    'return',
    'else'
  ],
  ExprList: [ ']' ],
  Expr: [
    ';',
    ')',
    'if',
    'while',
    'int',
    'boolean',
    'ID',
    'System.out.println',
    '}',
    'return',
    'else',
    ',',
    ']'
  ],
  ExprP: [
    ';',
    ')',
    'if',
    'while',
    'int',
    'boolean',
    'ID',
    'System.out.println',
    '}',
    'return',
    'else',
    ',',
    ']'
  ],
  LogicalOperand: [
    '||',   '&&',
    ';',    ')',
    'if',   'while',
    'int',  'boolean',
    'ID',   'System.out.println',
    '}',    'return',
    'else', ',',
    ']'
  ],
  LogicalOperandP: [
    '||',   '&&',
    ';',    ')',
    'if',   'while',
    'int',  'boolean',
    'ID',   'System.out.println',
    '}',    'return',
    'else', ',',
    ']'
  ],
  RelOperand: [],
  RelOperandP: [],
  AddOperand: [ '+', '-' ],
  AddOperandP: [ '+', '-' ],
  UnaryOperand: [],
  ParenOperand: [ ')' ],
  Value: [ '.', ')' ]
}
{
  '1': [ 'class' ],
  '2': [ 'class' ],
  '3': [ 'class' ],
  '4': [],
  '5': [ 'class' ],
  '6': [ 'ClassVar' ],
  '7': [],
  '8': [ 'int', 'boolean', 'ID' ],
  '9': [ 'public' ],
  '10': [ '}' ],
  '11': [ 'public' ],
  '12': [ ',' ],
  '13': [ ']' ],
  '14': [ 'int', 'boolean', 'ID' ],
  '15': [ 'int' ],
  '16': [ 'boolean' ],
  '17': [ 'ID' ],
  '18': [ 'if', 'while', 'int', 'boolean', 'ID', 'System.out.println' ],
  '19': [ '}', 'return' ],
  '20': [ 'if' ],
  '21': [ 'while' ],
  '22': [ 'int', 'boolean', 'ID', 'System.out.println' ],
  '23': [ '{' ],
  '24': [ 'int', 'boolean', 'ID', 'System.out.println' ],
  '25': [ 'int', 'boolean', 'ID', 'System.out.println' ],
  '26': [ '}' ],
  '27': [ 'int', 'boolean', 'ID' ],
  '28': [ 'System.out.println' ],
  '29': [ 'ID' ],
  '30': [ ',' ],
  '31': [ ']' ],
  '32': [ 'EqualityOperand' ],
  '33': [ '||' ],
  '34': [ '&&' ],
  '35': [
    ';',
    ')',
    'if',
    'while',
    'int',
    'boolean',
    'ID',
    'System.out.println',
    '}',
    'return',
    'else',
    ',',
    ']'
  ],
  '36': [ 'EqualityOperand' ],
  '37': [ '==' ],
  '38': [ '!=' ],
  '39': [
    '||',   '&&',
    ';',    ')',
    'if',   'while',
    'int',  'boolean',
    'ID',   'System.out.println',
    '}',    'return',
    'else', ',',
    ']'
  ],
  '40': [ 'MulOperand' ],
  '41': [ '+' ],
  '42': [ '-' ],
  '43': [],
  '44': [ 'MulOperand' ],
  '45': [ '*' ],
  '46': [ '/' ],
  '47': [ '+', '-' ],
  '48': [ '(' ],
  '49': [
    'new',   'ID',
    'this',  'Integer',
    'null',  'true',
    'false'
  ],
  '50': [
    'new',   'ID',
    'this',  'Integer',
    'null',  'true',
    'false'
  ],
  '51': [
    'new',   'ID',
    'this',  'Integer',
    'null',  'true',
    'false'
  ],
  '52': [ 'new' ],
  '53': [ 'ID' ],
  '54': [ 'this' ],
  '55': [ 'Integer' ],
  '56': [ 'null' ],
  '57': [ 'true' ],
  '58': [ 'false' ]
}
