Program: First: {class}	 Follow: {$}Program -> MainClassDecl ClassDeclList
MainClassDecl: First: {class}	 Follow: {$,class}MainClassDecl -> class ID { public static void main ( String [ ] ID ) { StmtList } }
ClassDeclList: First: {'',class}	 Follow: {$}ClassDeclList -> ClassDecl ClassDeclList
ClassDecl: First: {class}	 Follow: {$,class}ClassDecl -> class ID ClassDeclPrime { ClassVarDeclList MethodDeclList }
ClassDeclPrime: First: {extends,''}	 Follow: {{}
ClassVarDeclList: First: {'',int,boolean,ID}	 Follow: {$,class,public,}}ClassVarDeclList -> ''
ClassVarDecl: First: {int,boolean,ID}	 Follow: {$,class,public,},int,boolean,ID}
MethodDeclList: First: {'',public}	 Follow: {}}
MethodDecl: First: {public}	 Follow: {},public}
FormalList: First: {'',int,boolean,ID}	 Follow: {)}
FormalListPrime: First: {,,''}	 Follow: {)}
Formal: First: {int,boolean,ID}	 Follow: {;,(,,,)}
Type: First: {int,boolean,ID}	 Follow: {ID}
IsArr: First: {[,''}	 Follow: {ID,=,;}
HasExpr: First: {'',new,!,-,(,ID,this,Integer,null,true,false}	 Follow: {]}
StmtList: First: {'',if,while,System.out.println,int,boolean,ID}	 Follow: {},return}
Stmt: First: {if,while,System.out.println,int,boolean,ID}	 Follow: {},return,if,while,System.out.println,int,boolean,ID,else}
BracketStmt: First: {{,if,while,System.out.println,int,boolean,ID}	 Follow: {else,},return,if,while,System.out.println,int,boolean,ID}
AtomicStmt: First: {System.out.println,int,boolean,ID}	 Follow: {},return,if,while,System.out.println,int,boolean,ID,else}
IDAssignment: First: {ID,=}	 Follow: {},return,if,while,System.out.println,int,boolean,ID,else}
Assignment: First: {=,;}	 Follow: {},return,if,while,System.out.println,int,boolean,ID,else}
ExprList: First: {'',new,!,-,(,ID,this,Integer,null,true,false}	 Follow: {)}
ExprListPrime: First: {,,''}	 Follow: {)}
Expr: First: {new,!,-,(,ID,this,Integer,null,true,false}	 Follow: {;,],),,}
ExprPrime: First: {||,''}	 Follow: {;,],),,}
OrOperand: First: {new,!,-,(,ID,this,Integer,null,true,false}	 Follow: {||,;,],),,}
OrOperandPrime: First: {&&,''}	 Follow: {||,;,],),,}
AndOperand: First: {new,!,-,(,ID,this,Integer,null,true,false}	 Follow: {&&,||,;,],),,}
AndOperandPrime: First: {==,!=,''}	 Follow: {&&,||,;,],),,}
EqualityOperand: First: {new,!,-,(,ID,this,Integer,null,true,false}	 Follow: {==,!=,&&,||,;,],),,}
EqualityOperandPrime: First: {<,<=,>=,>,''}	 Follow: {==,!=,&&,||,;,],),,}
RelOperand: First: {new,!,-,(,ID,this,Integer,null,true,false}	 Follow: {<,<=,>=,>,==,!=,&&,||,;,],),,}
RelOperandPrime: First: {+,-,''}	 Follow: {<,<=,>=,>,==,!=,&&,||,;,],),,}
AddOperand: First: {new,!,-,(,ID,this,Integer,null,true,false}	 Follow: {+,-,<,<=,>=,>,==,!=,&&,||,;,],),,}
AddOperandPrime: First: {*,/,''}	 Follow: {+,-,<,<=,>=,>,==,!=,&&,||,;,],),,}
Value: First: {new,!,-,(,ID,this,Integer,null,true,false}	 Follow: {*,/,+,-,<,<=,>=,>,==,!=,&&,||,;,],),,}
NewWhat: First: {int,ID}	 Follow: {*,/,+,-,<,<=,>=,>,==,!=,&&,||,;,],),,}
ValuePrime: First: {.,[,''}	 Follow: {*,/,+,-,<,<=,>=,>,==,!=,&&,||,;,],),,}
DotWhat: First: {ID,length}	 Follow: {*,/,+,-,<,<=,>=,>,==,!=,&&,||,;,],),,}
