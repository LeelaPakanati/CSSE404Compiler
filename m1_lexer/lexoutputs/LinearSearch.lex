ReserveWord, class
ID, LinearSearch
Delimiter, {
ReserveWord, public
ReserveWord, static
ReserveWord, void
ReserveWord, main
Delimiter, (
ReserveWord, String
Delimiter, [
Delimiter, ]
ID, a
Delimiter, )
Delimiter, {
ReserveWord, System.out.println
Delimiter, (
ReserveWord, new
ID, LS
Delimiter, (
Delimiter, )
Delimiter, .
ID, Start
Delimiter, (
Integer, 10
Delimiter, )
Delimiter, )
Delimiter, ;
Delimiter, }
Delimiter, }
ReserveWord, class
ID, LS
Delimiter, {
ReserveWord, int
Delimiter, [
Delimiter, ]
ID, number
Delimiter, ;
ReserveWord, int
ID, size
Delimiter, ;
ReserveWord, public
ReserveWord, int
ID, Start
Delimiter, (
ReserveWord, int
ID, sz
Delimiter, )
Delimiter, {
ReserveWord, int
ID, aux01
Delimiter, ;
ReserveWord, int
ID, aux02
Delimiter, ;
ID, aux01
Delimiter, =
ID, this
Delimiter, .
ID, Init
Delimiter, (
ID, sz
Delimiter, )
Delimiter, ;
ID, aux02
Delimiter, =
ID, this
Delimiter, .
ID, Print
Delimiter, (
Delimiter, )
Delimiter, ;
ReserveWord, System.out.println
Delimiter, (
Integer, 9999
Delimiter, )
Delimiter, ;
ReserveWord, System.out.println
Delimiter, (
ID, this
Delimiter, .
ID, Search
Delimiter, (
Integer, 8
Delimiter, )
Delimiter, )
Delimiter, ;
ReserveWord, System.out.println
Delimiter, (
ID, this
Delimiter, .
ID, Search
Delimiter, (
Integer, 12
Delimiter, )
Delimiter, )
Delimiter, ;
ReserveWord, System.out.println
Delimiter, (
ID, this
Delimiter, .
ID, Search
Delimiter, (
Integer, 17
Delimiter, )
Delimiter, )
Delimiter, ;
ReserveWord, System.out.println
Delimiter, (
ID, this
Delimiter, .
ID, Search
Delimiter, (
Integer, 50
Delimiter, )
Delimiter, )
Delimiter, ;
ReserveWord, return
Integer, 55
Delimiter, ;
Delimiter, }
ReserveWord, public
ReserveWord, int
ID, Print
Delimiter, (
Delimiter, )
Delimiter, {
ReserveWord, int
ID, j
Delimiter, ;
ID, j
Delimiter, =
Integer, 1
Delimiter, ;
ReserveWord, while
Delimiter, (
ID, j
Delimiter, <
Delimiter, (
ID, size
Delimiter, )
Delimiter, )
Delimiter, {
ReserveWord, System.out.println
Delimiter, (
ID, number
Delimiter, [
ID, j
Delimiter, ]
Delimiter, )
Delimiter, ;
ID, j
Delimiter, =
ID, j
Delimiter, +
Integer, 1
Delimiter, ;
Delimiter, }
ReserveWord, return
Integer, 0
Delimiter, ;
Delimiter, }
ReserveWord, public
ReserveWord, int
ID, Search
Delimiter, (
ReserveWord, int
ID, num
Delimiter, )
Delimiter, {
ReserveWord, int
ID, j
Delimiter, ;
ReserveWord, boolean
ID, ls01
Delimiter, ;
ReserveWord, int
ID, ifound
Delimiter, ;
ReserveWord, int
ID, aux01
Delimiter, ;
ReserveWord, int
ID, aux02
Delimiter, ;
ReserveWord, int
ID, nt
Delimiter, ;
ID, j
Delimiter, =
Integer, 1
Delimiter, ;
ID, ls01
Delimiter, =
ReserveWord, false
Delimiter, ;
ID, ifound
Delimiter, =
Integer, 0
Delimiter, ;
ReserveWord, while
Delimiter, (
ID, j
Delimiter, <
Delimiter, (
ID, size
Delimiter, )
Delimiter, )
Delimiter, {
ID, aux01
Delimiter, =
ID, number
Delimiter, [
ID, j
Delimiter, ]
Delimiter, ;
ID, aux02
Delimiter, =
ID, num
Delimiter, +
Integer, 1
Delimiter, ;
ReserveWord, if
Delimiter, (
ID, aux01
Delimiter, <
ID, num
Delimiter, )
ID, nt
Delimiter, =
Integer, 0
Delimiter, ;
ReserveWord, else
ReserveWord, if
Delimiter, (
Delimiter, !
Delimiter, (
ID, aux01
Delimiter, <
ID, aux02
Delimiter, )
Delimiter, )
ID, nt
Delimiter, =
Integer, 0
Delimiter, ;
ReserveWord, else
Delimiter, {
ID, ls01
Delimiter, =
ReserveWord, true
Delimiter, ;
ID, ifound
Delimiter, =
Integer, 1
Delimiter, ;
ID, j
Delimiter, =
ID, size
Delimiter, ;
Delimiter, }
ID, j
Delimiter, =
ID, j
Delimiter, +
Integer, 1
Delimiter, ;
Delimiter, }
ReserveWord, return
ID, ifound
Delimiter, ;
Delimiter, }
ReserveWord, public
ReserveWord, int
ID, Init
Delimiter, (
ReserveWord, int
ID, sz
Delimiter, )
Delimiter, {
ReserveWord, int
ID, j
Delimiter, ;
ReserveWord, int
ID, k
Delimiter, ;
ReserveWord, int
ID, aux01
Delimiter, ;
ReserveWord, int
ID, aux02
Delimiter, ;
ID, size
Delimiter, =
ID, sz
Delimiter, ;
ID, number
Delimiter, =
ReserveWord, new
ReserveWord, int
Delimiter, [
ID, sz
Delimiter, ]
Delimiter, ;
ID, j
Delimiter, =
Integer, 1
Delimiter, ;
ID, k
Delimiter, =
ID, size
Delimiter, +
Integer, 1
Delimiter, ;
ReserveWord, while
Delimiter, (
ID, j
Delimiter, <
Delimiter, (
ID, size
Delimiter, )
Delimiter, )
Delimiter, {
ID, aux01
Delimiter, =
Integer, 2
Delimiter, *
ID, j
Delimiter, ;
ID, aux02
Delimiter, =
ID, k
Delimiter, -
Integer, 3
Delimiter, ;
ID, number
Delimiter, [
ID, j
Delimiter, ]
Delimiter, =
ID, aux01
Delimiter, +
ID, aux02
Delimiter, ;
ID, j
Delimiter, =
ID, j
Delimiter, +
Integer, 1
Delimiter, ;
ID, k
Delimiter, =
ID, k
Delimiter, -
Integer, 1
Delimiter, ;
Delimiter, }
ReserveWord, return
Integer, 0
Delimiter, ;
Delimiter, }
Delimiter, }
