ReserveWord, class
ID, LinkedList
Delimiter, {
ReserveWord, public
ReserveWord, static
ReserveWord, void
ReserveWord, main
Delimiter, (
ReserveWord, String
Delimiter, [
Delimiter, ]
ID, a
Delimiter, )
Delimiter, {
ReserveWord, System.out.println
Delimiter, (
ReserveWord, new
ID, LL
Delimiter, (
Delimiter, )
Delimiter, .
ID, Start
Delimiter, (
Delimiter, )
Delimiter, )
Delimiter, ;
Delimiter, }
Delimiter, }
ReserveWord, class
ID, Element
Delimiter, {
ReserveWord, int
ID, Age
Delimiter, ;
ReserveWord, int
ID, Salary
Delimiter, ;
ReserveWord, boolean
ID, Married
Delimiter, ;
ReserveWord, public
ReserveWord, boolean
ID, Init
Delimiter, (
ReserveWord, int
ID, v_Age
Delimiter, ,
ReserveWord, int
ID, v_Salary
Delimiter, ,
ReserveWord, boolean
ID, v_Married
Delimiter, )
Delimiter, {
ID, Age
Delimiter, =
ID, v_Age
Delimiter, ;
ID, Salary
Delimiter, =
ID, v_Salary
Delimiter, ;
ID, Married
Delimiter, =
ID, v_Married
Delimiter, ;
ReserveWord, return
ReserveWord, true
Delimiter, ;
Delimiter, }
ReserveWord, public
ReserveWord, int
ID, GetAge
Delimiter, (
Delimiter, )
Delimiter, {
ReserveWord, return
ID, Age
Delimiter, ;
Delimiter, }
ReserveWord, public
ReserveWord, int
ID, GetSalary
Delimiter, (
Delimiter, )
Delimiter, {
ReserveWord, return
ID, Salary
Delimiter, ;
Delimiter, }
ReserveWord, public
ReserveWord, boolean
ID, GetMarried
Delimiter, (
Delimiter, )
Delimiter, {
ReserveWord, return
ID, Married
Delimiter, ;
Delimiter, }
ReserveWord, public
ReserveWord, boolean
ID, Equal
Delimiter, (
ID, Element
ID, other
Delimiter, )
Delimiter, {
ReserveWord, boolean
ID, ret_val
Delimiter, ;
ReserveWord, int
ID, aux01
Delimiter, ;
ReserveWord, int
ID, aux02
Delimiter, ;
ReserveWord, int
ID, nt
Delimiter, ;
ID, ret_val
Delimiter, =
ReserveWord, true
Delimiter, ;
ID, aux01
Delimiter, =
ID, other
Delimiter, .
ID, GetAge
Delimiter, (
Delimiter, )
Delimiter, ;
ReserveWord, if
Delimiter, (
Delimiter, !
ID, this
Delimiter, .
ID, Compare
Delimiter, (
ID, aux01
Delimiter, ,
ID, Age
Delimiter, )
Delimiter, )
ID, ret_val
Delimiter, =
ReserveWord, false
Delimiter, ;
ReserveWord, else
Delimiter, {
ID, aux02
Delimiter, =
ID, other
Delimiter, .
ID, GetSalary
Delimiter, (
Delimiter, )
Delimiter, ;
ReserveWord, if
Delimiter, (
Delimiter, !
ID, this
Delimiter, .
ID, Compare
Delimiter, (
ID, aux02
Delimiter, ,
ID, Salary
Delimiter, )
Delimiter, )
ID, ret_val
Delimiter, =
ReserveWord, false
Delimiter, ;
ReserveWord, else
ReserveWord, if
Delimiter, (
ID, Married
Delimiter, )
ReserveWord, if
Delimiter, (
Delimiter, !
ID, other
Delimiter, .
ID, GetMarried
Delimiter, (
Delimiter, )
Delimiter, )
ID, ret_val
Delimiter, =
ReserveWord, false
Delimiter, ;
ReserveWord, else
ID, nt
Delimiter, =
Integer, 0
Delimiter, ;
ReserveWord, else
ReserveWord, if
Delimiter, (
ID, other
Delimiter, .
ID, GetMarried
Delimiter, (
Delimiter, )
Delimiter, )
ID, ret_val
Delimiter, =
ReserveWord, false
Delimiter, ;
ReserveWord, else
ID, nt
Delimiter, =
Integer, 0
Delimiter, ;
Delimiter, }
ReserveWord, return
ID, ret_val
Delimiter, ;
Delimiter, }
ReserveWord, public
ReserveWord, boolean
ID, Compare
Delimiter, (
ReserveWord, int
ID, num1
Delimiter, ,
ReserveWord, int
ID, num2
Delimiter, )
Delimiter, {
ReserveWord, boolean
ID, retval
Delimiter, ;
ReserveWord, int
ID, aux02
Delimiter, ;
ID, retval
Delimiter, =
ReserveWord, false
Delimiter, ;
ID, aux02
Delimiter, =
ID, num2
Delimiter, +
Integer, 1
Delimiter, ;
ReserveWord, if
Delimiter, (
ID, num1
Delimiter, <
ID, num2
Delimiter, )
ID, retval
Delimiter, =
ReserveWord, false
Delimiter, ;
ReserveWord, else
ReserveWord, if
Delimiter, (
Delimiter, !
Delimiter, (
ID, num1
Delimiter, <
ID, aux02
Delimiter, )
Delimiter, )
ID, retval
Delimiter, =
ReserveWord, false
Delimiter, ;
ReserveWord, else
ID, retval
Delimiter, =
ReserveWord, true
Delimiter, ;
ReserveWord, return
ID, retval
Delimiter, ;
Delimiter, }
Delimiter, }
ReserveWord, class
ID, List
Delimiter, {
ID, Element
ID, elem
Delimiter, ;
ID, List
ID, next
Delimiter, ;
ReserveWord, boolean
ID, end
Delimiter, ;
ReserveWord, public
ReserveWord, boolean
ID, Init
Delimiter, (
Delimiter, )
Delimiter, {
ID, end
Delimiter, =
ReserveWord, true
Delimiter, ;
ReserveWord, return
ReserveWord, true
Delimiter, ;
Delimiter, }
ReserveWord, public
ReserveWord, boolean
ID, InitNew
Delimiter, (
ID, Element
ID, v_elem
Delimiter, ,
ID, List
ID, v_next
Delimiter, ,
ReserveWord, boolean
ID, v_end
Delimiter, )
Delimiter, {
ID, end
Delimiter, =
ID, v_end
Delimiter, ;
ID, elem
Delimiter, =
ID, v_elem
Delimiter, ;
ID, next
Delimiter, =
ID, v_next
Delimiter, ;
ReserveWord, return
ReserveWord, true
Delimiter, ;
Delimiter, }
ReserveWord, public
ID, List
ID, Insert
Delimiter, (
ID, Element
ID, new_elem
Delimiter, )
Delimiter, {
ReserveWord, boolean
ID, ret_val
Delimiter, ;
ID, List
ID, aux03
Delimiter, ;
ID, List
ID, aux02
Delimiter, ;
ID, aux03
Delimiter, =
ReserveWord, this
Delimiter, ;
ID, aux02
Delimiter, =
ReserveWord, new
ID, List
Delimiter, (
Delimiter, )
Delimiter, ;
ID, ret_val
Delimiter, =
ID, aux02
Delimiter, .
ID, InitNew
Delimiter, (
ID, new_elem
Delimiter, ,
ID, aux03
Delimiter, ,
ReserveWord, false
Delimiter, )
Delimiter, ;
ReserveWord, return
ID, aux02
Delimiter, ;
Delimiter, }
ReserveWord, public
ReserveWord, boolean
ID, SetNext
Delimiter, (
ID, List
ID, v_next
Delimiter, )
Delimiter, {
ID, next
Delimiter, =
ID, v_next
Delimiter, ;
ReserveWord, return
ReserveWord, true
Delimiter, ;
Delimiter, }
ReserveWord, public
ID, List
ID, Delete
Delimiter, (
ID, Element
ID, e
Delimiter, )
Delimiter, {
ID, List
ID, my_head
Delimiter, ;
ReserveWord, boolean
ID, ret_val
Delimiter, ;
ReserveWord, boolean
ID, aux05
Delimiter, ;
ID, List
ID, aux01
Delimiter, ;
ID, List
ID, prev
Delimiter, ;
ReserveWord, boolean
ID, var_end
Delimiter, ;
ID, Element
ID, var_elem
Delimiter, ;
ReserveWord, int
ID, aux04
Delimiter, ;
ReserveWord, int
ID, nt
Delimiter, ;
ID, my_head
Delimiter, =
ReserveWord, this
Delimiter, ;
ID, ret_val
Delimiter, =
ReserveWord, false
Delimiter, ;
ID, aux04
Delimiter, =
Integer, 0
Delimiter, -
Integer, 1
Delimiter, ;
ID, aux01
Delimiter, =
ReserveWord, this
Delimiter, ;
ID, prev
Delimiter, =
ReserveWord, this
Delimiter, ;
ID, var_end
Delimiter, =
ID, end
Delimiter, ;
ID, var_elem
Delimiter, =
ID, elem
Delimiter, ;
ReserveWord, while
Delimiter, (
Delimiter, (
Delimiter, !
ID, var_end
Delimiter, )
Delimiter, &&
Delimiter, (
Delimiter, !
ID, ret_val
Delimiter, )
Delimiter, )
Delimiter, {
ReserveWord, if
Delimiter, (
ID, e
Delimiter, .
ID, Equal
Delimiter, (
ID, var_elem
Delimiter, )
Delimiter, )
Delimiter, {
ID, ret_val
Delimiter, =
ReserveWord, true
Delimiter, ;
ReserveWord, if
Delimiter, (
ID, aux04
Delimiter, <
Integer, 0
Delimiter, )
Delimiter, {
ID, my_head
Delimiter, =
ID, aux01
Delimiter, .
ID, GetNext
Delimiter, (
Delimiter, )
Delimiter, ;
Delimiter, }
ReserveWord, else
Delimiter, {
ReserveWord, System.out.println
Delimiter, (
Integer, 0
Delimiter, -
Integer, 555
Delimiter, )
Delimiter, ;
ID, aux05
Delimiter, =
ID, prev
Delimiter, .
ID, SetNext
Delimiter, (
ID, aux01
Delimiter, .
ID, GetNext
Delimiter, (
Delimiter, )
Delimiter, )
Delimiter, ;
ReserveWord, System.out.println
Delimiter, (
Integer, 0
Delimiter, -
Integer, 555
Delimiter, )
Delimiter, ;
Delimiter, }
Delimiter, }
ReserveWord, else
ID, nt
Delimiter, =
Integer, 0
Delimiter, ;
ReserveWord, if
Delimiter, (
Delimiter, !
ID, ret_val
Delimiter, )
Delimiter, {
ID, prev
Delimiter, =
ID, aux01
Delimiter, ;
ID, aux01
Delimiter, =
ID, aux01
Delimiter, .
ID, GetNext
Delimiter, (
Delimiter, )
Delimiter, ;
ID, var_end
Delimiter, =
ID, aux01
Delimiter, .
ID, GetEnd
Delimiter, (
Delimiter, )
Delimiter, ;
ID, var_elem
Delimiter, =
ID, aux01
Delimiter, .
ID, GetElem
Delimiter, (
Delimiter, )
Delimiter, ;
ID, aux04
Delimiter, =
Integer, 1
Delimiter, ;
Delimiter, }
ReserveWord, else
ID, nt
Delimiter, =
Integer, 0
Delimiter, ;
Delimiter, }
ReserveWord, return
ID, my_head
Delimiter, ;
Delimiter, }
ReserveWord, public
ReserveWord, int
ID, Search
Delimiter, (
ID, Element
ID, e
Delimiter, )
Delimiter, {
ReserveWord, int
ID, int_ret_val
Delimiter, ;
ID, List
ID, aux01
Delimiter, ;
ID, Element
ID, var_elem
Delimiter, ;
ReserveWord, boolean
ID, var_end
Delimiter, ;
ReserveWord, int
ID, nt
Delimiter, ;
ID, int_ret_val
Delimiter, =
Integer, 0
Delimiter, ;
ID, aux01
Delimiter, =
ReserveWord, this
Delimiter, ;
ID, var_end
Delimiter, =
ID, end
Delimiter, ;
ID, var_elem
Delimiter, =
ID, elem
Delimiter, ;
ReserveWord, while
Delimiter, (
Delimiter, !
ID, var_end
Delimiter, )
Delimiter, {
ReserveWord, if
Delimiter, (
ID, e
Delimiter, .
ID, Equal
Delimiter, (
ID, var_elem
Delimiter, )
Delimiter, )
Delimiter, {
ID, int_ret_val
Delimiter, =
Integer, 1
Delimiter, ;
Delimiter, }
ReserveWord, else
ID, nt
Delimiter, =
Integer, 0
Delimiter, ;
ID, aux01
Delimiter, =
ID, aux01
Delimiter, .
ID, GetNext
Delimiter, (
Delimiter, )
Delimiter, ;
ID, var_end
Delimiter, =
ID, aux01
Delimiter, .
ID, GetEnd
Delimiter, (
Delimiter, )
Delimiter, ;
ID, var_elem
Delimiter, =
ID, aux01
Delimiter, .
ID, GetElem
Delimiter, (
Delimiter, )
Delimiter, ;
Delimiter, }
ReserveWord, return
ID, int_ret_val
Delimiter, ;
Delimiter, }
ReserveWord, public
ReserveWord, boolean
ID, GetEnd
Delimiter, (
Delimiter, )
Delimiter, {
ReserveWord, return
ID, end
Delimiter, ;
Delimiter, }
ReserveWord, public
ID, Element
ID, GetElem
Delimiter, (
Delimiter, )
Delimiter, {
ReserveWord, return
ID, elem
Delimiter, ;
Delimiter, }
ReserveWord, public
ID, List
ID, GetNext
Delimiter, (
Delimiter, )
Delimiter, {
ReserveWord, return
ID, next
Delimiter, ;
Delimiter, }
ReserveWord, public
ReserveWord, boolean
ID, Print
Delimiter, (
Delimiter, )
Delimiter, {
ID, List
ID, aux01
Delimiter, ;
ReserveWord, boolean
ID, var_end
Delimiter, ;
ID, Element
ID, var_elem
Delimiter, ;
ID, aux01
Delimiter, =
ReserveWord, this
Delimiter, ;
ID, var_end
Delimiter, =
ID, end
Delimiter, ;
ID, var_elem
Delimiter, =
ID, elem
Delimiter, ;
ReserveWord, while
Delimiter, (
Delimiter, !
ID, var_end
Delimiter, )
Delimiter, {
ReserveWord, System.out.println
Delimiter, (
ID, var_elem
Delimiter, .
ID, GetAge
Delimiter, (
Delimiter, )
Delimiter, )
Delimiter, ;
ID, aux01
Delimiter, =
ID, aux01
Delimiter, .
ID, GetNext
Delimiter, (
Delimiter, )
Delimiter, ;
ID, var_end
Delimiter, =
ID, aux01
Delimiter, .
ID, GetEnd
Delimiter, (
Delimiter, )
Delimiter, ;
ID, var_elem
Delimiter, =
ID, aux01
Delimiter, .
ID, GetElem
Delimiter, (
Delimiter, )
Delimiter, ;
Delimiter, }
ReserveWord, return
ReserveWord, true
Delimiter, ;
Delimiter, }
Delimiter, }
ReserveWord, class
ID, LL
Delimiter, {
ReserveWord, public
ReserveWord, int
ID, Start
Delimiter, (
Delimiter, )
Delimiter, {
ID, List
ID, head
Delimiter, ;
ID, List
ID, last_elem
Delimiter, ;
ReserveWord, boolean
ID, aux01
Delimiter, ;
ID, Element
ID, el01
Delimiter, ;
ID, Element
ID, el02
Delimiter, ;
ID, Element
ID, el03
Delimiter, ;
ID, last_elem
Delimiter, =
ReserveWord, new
ID, List
Delimiter, (
Delimiter, )
Delimiter, ;
ID, aux01
Delimiter, =
ID, last_elem
Delimiter, .
ID, Init
Delimiter, (
Delimiter, )
Delimiter, ;
ID, head
Delimiter, =
ID, last_elem
Delimiter, ;
ID, aux01
Delimiter, =
ID, head
Delimiter, .
ID, Init
Delimiter, (
Delimiter, )
Delimiter, ;
ID, aux01
Delimiter, =
ID, head
Delimiter, .
ID, Print
Delimiter, (
Delimiter, )
Delimiter, ;
ID, el01
Delimiter, =
ReserveWord, new
ID, Element
Delimiter, (
Delimiter, )
Delimiter, ;
ID, aux01
Delimiter, =
ID, el01
Delimiter, .
ID, Init
Delimiter, (
Integer, 25
Delimiter, ,
Integer, 37000
Delimiter, ,
ReserveWord, false
Delimiter, )
Delimiter, ;
ID, head
Delimiter, =
ID, head
Delimiter, .
ID, Insert
Delimiter, (
ID, el01
Delimiter, )
Delimiter, ;
ID, aux01
Delimiter, =
ID, head
Delimiter, .
ID, Print
Delimiter, (
Delimiter, )
Delimiter, ;
ReserveWord, System.out.println
Delimiter, (
Integer, 10000000
Delimiter, )
Delimiter, ;
ID, el01
Delimiter, =
ReserveWord, new
ID, Element
Delimiter, (
Delimiter, )
Delimiter, ;
ID, aux01
Delimiter, =
ID, el01
Delimiter, .
ID, Init
Delimiter, (
Integer, 39
Delimiter, ,
Integer, 42000
Delimiter, ,
ReserveWord, true
Delimiter, )
Delimiter, ;
ID, el02
Delimiter, =
ID, el01
Delimiter, ;
ID, head
Delimiter, =
ID, head
Delimiter, .
ID, Insert
Delimiter, (
ID, el01
Delimiter, )
Delimiter, ;
ID, aux01
Delimiter, =
ID, head
Delimiter, .
ID, Print
Delimiter, (
Delimiter, )
Delimiter, ;
ReserveWord, System.out.println
Delimiter, (
Integer, 10000000
Delimiter, )
Delimiter, ;
ID, el01
Delimiter, =
ReserveWord, new
ID, Element
Delimiter, (
Delimiter, )
Delimiter, ;
ID, aux01
Delimiter, =
ID, el01
Delimiter, .
ID, Init
Delimiter, (
Integer, 22
Delimiter, ,
Integer, 34000
Delimiter, ,
ReserveWord, false
Delimiter, )
Delimiter, ;
ID, head
Delimiter, =
ID, head
Delimiter, .
ID, Insert
Delimiter, (
ID, el01
Delimiter, )
Delimiter, ;
ID, aux01
Delimiter, =
ID, head
Delimiter, .
ID, Print
Delimiter, (
Delimiter, )
Delimiter, ;
ID, el03
Delimiter, =
ReserveWord, new
ID, Element
Delimiter, (
Delimiter, )
Delimiter, ;
ID, aux01
Delimiter, =
ID, el03
Delimiter, .
ID, Init
Delimiter, (
Integer, 27
Delimiter, ,
Integer, 34000
Delimiter, ,
ReserveWord, false
Delimiter, )
Delimiter, ;
ReserveWord, System.out.println
Delimiter, (
ID, head
Delimiter, .
ID, Search
Delimiter, (
ID, el02
Delimiter, )
Delimiter, )
Delimiter, ;
ReserveWord, System.out.println
Delimiter, (
ID, head
Delimiter, .
ID, Search
Delimiter, (
ID, el03
Delimiter, )
Delimiter, )
Delimiter, ;
ReserveWord, System.out.println
Delimiter, (
Integer, 10000000
Delimiter, )
Delimiter, ;
ID, el01
Delimiter, =
ReserveWord, new
ID, Element
Delimiter, (
Delimiter, )
Delimiter, ;
ID, aux01
Delimiter, =
ID, el01
Delimiter, .
ID, Init
Delimiter, (
Integer, 28
Delimiter, ,
Integer, 35000
Delimiter, ,
ReserveWord, false
Delimiter, )
Delimiter, ;
ID, head
Delimiter, =
ID, head
Delimiter, .
ID, Insert
Delimiter, (
ID, el01
Delimiter, )
Delimiter, ;
ID, aux01
Delimiter, =
ID, head
Delimiter, .
ID, Print
Delimiter, (
Delimiter, )
Delimiter, ;
ReserveWord, System.out.println
Delimiter, (
Integer, 2220000
Delimiter, )
Delimiter, ;
ID, head
Delimiter, =
ID, head
Delimiter, .
ID, Delete
Delimiter, (
ID, el02
Delimiter, )
Delimiter, ;
ID, aux01
Delimiter, =
ID, head
Delimiter, .
ID, Print
Delimiter, (
Delimiter, )
Delimiter, ;
ReserveWord, System.out.println
Delimiter, (
Integer, 33300000
Delimiter, )
Delimiter, ;
ID, head
Delimiter, =
ID, head
Delimiter, .
ID, Delete
Delimiter, (
ID, el01
Delimiter, )
Delimiter, ;
ID, aux01
Delimiter, =
ID, head
Delimiter, .
ID, Print
Delimiter, (
Delimiter, )
Delimiter, ;
ReserveWord, System.out.println
Delimiter, (
Integer, 44440000
Delimiter, )
Delimiter, ;
ReserveWord, return
Integer, 0
Delimiter, ;
Delimiter, }
Delimiter, }
